@page "/checkin"
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager

<label>
    Name :
    <input @bind="nameInput" class="form-control" />
</label>

<br />
<br />
<button type="button" class="btn btn-@btncheckin btn-lg btn-block" @onclick="Send" hidden="@lblHiden" >
    <span class="oi oi-map-marker" aria-hidden="true"></span> @lblname
</button>

<hr>

<ul id="messagesList">

    @foreach (var message in messages)
    {
        <li>  @message</li>
    }
</ul>


@code {
    private HubConnection? hubConnection;
    private List<string> messages = new List<string>();
    private string? nameInput;
    private string? message;
    private string? lblname = "CheckIn";
    private string? lblHiden;
    private DateTime? checkdate = DateTime.Now.Date;
    private DateTime? stpdate = DateTime.Now;
    public static int currentCount = 0;
    private string? btncheckin = "primary";

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/chathub"))
            .Build();

        hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
        {
            var encodedMsg = $"{user}: {message}";
            messages.Add(encodedMsg);
            StateHasChanged();
        });

        await hubConnection.StartAsync();
    }

    private async Task Send()
    {
        currentCount++;
        if (hubConnection is not null)
        {
            if (currentCount == 1 && DateTime.Now.Date == checkdate)
            {
                await hubConnection.SendAsync("SendMessage", nameInput, message + " CheckIn Success!! Date : " + stpdate);
                lblname = "CheckOut";
                btncheckin = "danger";
            }
            else
            {
                await hubConnection.SendAsync("SendMessage", nameInput, message + " CheckOut Success!! Date : " + DateTime.Now);
                lblHiden = $"hidden";
            }
        }

    }
}
